// Code generated by mockery v1.0.0
package mocks

import api "a10bridge/a10/api"
import mock "github.com/stretchr/testify/mock"
import model "a10bridge/model"

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Client) Close() api.A10Error {
	ret := _m.Called()

	var r0 api.A10Error
	if rf, ok := ret.Get(0).(func() api.A10Error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(api.A10Error)
		}
	}

	return r0
}

// CreateHealthMonitor provides a mock function with given fields: monitor
func (_m *Client) CreateHealthMonitor(monitor *model.HealthCheck) api.A10Error {
	ret := _m.Called(monitor)

	var r0 api.A10Error
	if rf, ok := ret.Get(0).(func(*model.HealthCheck) api.A10Error); ok {
		r0 = rf(monitor)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(api.A10Error)
		}
	}

	return r0
}

// CreateMember provides a mock function with given fields: member
func (_m *Client) CreateMember(member *model.Member) api.A10Error {
	ret := _m.Called(member)

	var r0 api.A10Error
	if rf, ok := ret.Get(0).(func(*model.Member) api.A10Error); ok {
		r0 = rf(member)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(api.A10Error)
		}
	}

	return r0
}

// CreateServer provides a mock function with given fields: server
func (_m *Client) CreateServer(server *model.Node) api.A10Error {
	ret := _m.Called(server)

	var r0 api.A10Error
	if rf, ok := ret.Get(0).(func(*model.Node) api.A10Error); ok {
		r0 = rf(server)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(api.A10Error)
		}
	}

	return r0
}

// CreateServiceGroup provides a mock function with given fields: serviceGroup
func (_m *Client) CreateServiceGroup(serviceGroup *model.ServiceGroup) api.A10Error {
	ret := _m.Called(serviceGroup)

	var r0 api.A10Error
	if rf, ok := ret.Get(0).(func(*model.ServiceGroup) api.A10Error); ok {
		r0 = rf(serviceGroup)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(api.A10Error)
		}
	}

	return r0
}

// DeleteMember provides a mock function with given fields: member
func (_m *Client) DeleteMember(member *model.Member) api.A10Error {
	ret := _m.Called(member)

	var r0 api.A10Error
	if rf, ok := ret.Get(0).(func(*model.Member) api.A10Error); ok {
		r0 = rf(member)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(api.A10Error)
		}
	}

	return r0
}

// GetHealthMonitor provides a mock function with given fields: monitorName
func (_m *Client) GetHealthMonitor(monitorName string) (*model.HealthCheck, api.A10Error) {
	ret := _m.Called(monitorName)

	var r0 *model.HealthCheck
	if rf, ok := ret.Get(0).(func(string) *model.HealthCheck); ok {
		r0 = rf(monitorName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.HealthCheck)
		}
	}

	var r1 api.A10Error
	if rf, ok := ret.Get(1).(func(string) api.A10Error); ok {
		r1 = rf(monitorName)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(api.A10Error)
		}
	}

	return r0, r1
}

// GetServer provides a mock function with given fields: serverName
func (_m *Client) GetServer(serverName string) (*model.Node, api.A10Error) {
	ret := _m.Called(serverName)

	var r0 *model.Node
	if rf, ok := ret.Get(0).(func(string) *model.Node); ok {
		r0 = rf(serverName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Node)
		}
	}

	var r1 api.A10Error
	if rf, ok := ret.Get(1).(func(string) api.A10Error); ok {
		r1 = rf(serverName)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(api.A10Error)
		}
	}

	return r0, r1
}

// GetServiceGroup provides a mock function with given fields: serviceGroupName
func (_m *Client) GetServiceGroup(serviceGroupName string) (*model.ServiceGroup, api.A10Error) {
	ret := _m.Called(serviceGroupName)

	var r0 *model.ServiceGroup
	if rf, ok := ret.Get(0).(func(string) *model.ServiceGroup); ok {
		r0 = rf(serviceGroupName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.ServiceGroup)
		}
	}

	var r1 api.A10Error
	if rf, ok := ret.Get(1).(func(string) api.A10Error); ok {
		r1 = rf(serviceGroupName)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(api.A10Error)
		}
	}

	return r0, r1
}

// IsHealthMonitorNotFound provides a mock function with given fields: err
func (_m *Client) IsHealthMonitorNotFound(err api.A10Error) bool {
	ret := _m.Called(err)

	var r0 bool
	if rf, ok := ret.Get(0).(func(api.A10Error) bool); ok {
		r0 = rf(err)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsMemberAlreadyExists provides a mock function with given fields: err
func (_m *Client) IsMemberAlreadyExists(err api.A10Error) bool {
	ret := _m.Called(err)

	var r0 bool
	if rf, ok := ret.Get(0).(func(api.A10Error) bool); ok {
		r0 = rf(err)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsServerNotFound provides a mock function with given fields: err
func (_m *Client) IsServerNotFound(err api.A10Error) bool {
	ret := _m.Called(err)

	var r0 bool
	if rf, ok := ret.Get(0).(func(api.A10Error) bool); ok {
		r0 = rf(err)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsServiceGroupNotFound provides a mock function with given fields: err
func (_m *Client) IsServiceGroupNotFound(err api.A10Error) bool {
	ret := _m.Called(err)

	var r0 bool
	if rf, ok := ret.Get(0).(func(api.A10Error) bool); ok {
		r0 = rf(err)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// UpdateHealthMonitor provides a mock function with given fields: monitor
func (_m *Client) UpdateHealthMonitor(monitor *model.HealthCheck) api.A10Error {
	ret := _m.Called(monitor)

	var r0 api.A10Error
	if rf, ok := ret.Get(0).(func(*model.HealthCheck) api.A10Error); ok {
		r0 = rf(monitor)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(api.A10Error)
		}
	}

	return r0
}

// UpdateServer provides a mock function with given fields: server
func (_m *Client) UpdateServer(server *model.Node) api.A10Error {
	ret := _m.Called(server)

	var r0 api.A10Error
	if rf, ok := ret.Get(0).(func(*model.Node) api.A10Error); ok {
		r0 = rf(server)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(api.A10Error)
		}
	}

	return r0
}

// UpdateServiceGroup provides a mock function with given fields: serviceGroup
func (_m *Client) UpdateServiceGroup(serviceGroup *model.ServiceGroup) api.A10Error {
	ret := _m.Called(serviceGroup)

	var r0 api.A10Error
	if rf, ok := ret.Get(0).(func(*model.ServiceGroup) api.A10Error); ok {
		r0 = rf(serviceGroup)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(api.A10Error)
		}
	}

	return r0
}
